9999 4 1
5
BEGIN DATA
BEGIN GenericState 101
101 10
1 2 199 136
1
Receiver_TopLevel
0 65535 0
18
TEXTBEGIN
sendByte(NCGbyte);
TEXTEND
0
TEXTBEGIN

TEXTEND
BEGIN GenericState 102
102 10
6 17 23 30
1
START
0 12582911 0
0
TEXTBEGIN

TEXTEND
0
TEXTBEGIN

TEXTEND
BEGIN GenericState 103
103 10
25 38 46 55
1
SOH
0 12582911 0
0
TEXTBEGIN

TEXTEND
0
TEXTBEGIN

TEXTEND
BEGIN FinalState 106
106 10
143 114 147 118
1
FinalState
BEGIN Note 124
124 50
74 67 104 83
1
1 0 8421631 65535
91
TEXTBEGIN
 onEvent(SER)
 [rcvBlk[1] + rcvBlk[2] == 255 && rcvBlk[1] != numLastGoodBlk]/
 cen8();
 
TEXTEND
BEGIN Note 125
125 50
15 82 35 92
1
1 0 8421631 65535
37
TEXTBEGIN
 onEvent(SER)
 [(rcvBlk[0] == CAN)

TEXTEND
BEGIN GenericState 127
127 10
7 96 26 112
1
CAN
0 12582911 0
0
TEXTBEGIN

TEXTEND
0
TEXTBEGIN

TEXTEND
BEGIN Transition 129
129 40
121 107 121 115
127 106
3 2 1 1
2 16 112 16 113 
1 16 113 145 113 
3 145 113 145 114 
BEGIN Note 132
132 50
108 89 144 107
1
1 0 8421631 65535
30
TEXTBEGIN
 onEvent/
 rcvBlk[0] == CAN

TEXTEND
BEGIN Note 133
133 50
53 109 89 116
1
1 0 8421631 65535
27
TEXTBEGIN
[(rcvBlk[0] == CAN)]/



TEXTEND
BEGIN GenericState 134
134 10
178 22 198 38
1
EOT
0 12582911 0
0
TEXTBEGIN

TEXTEND
0
TEXTBEGIN

TEXTEND
BEGIN Note 135
135 50
118 7 148 23
1
1 0 8421631 65535
52
TEXTBEGIN
 [rcvBlk[0] == EOT]
 /sendByte(NAK);
 onEvent(SER)
TEXTEND
BEGIN Note 140
140 50
158 124 188 140
1
1 0 8421631 65535
39
TEXTBEGIN

[(rcvBlk[0] == EOT
/sendByte(ACK);

TEXTEND
BEGIN Note 142
142 50
64 29 105 47
1
1 0 8421631 65535
172
TEXTBEGIN
 onEvent
 [rcvBlk[1] + rcvBlk[2] == 255 &&
 rcvBlk[1] == numLastGoodBlk + 1 &&
 Sum == rcvblk[131]
 /numLastGoodBlk++;
 writeChunk();
 errCnt=0;
 sendByte(ACK);
			
TEXTEND
BEGIN Note 143
143 50
98 26 135 42
1
1 0 8421631 65535
111
TEXTBEGIN
 onEvent(SER)
 [rcvBllk[1] + rcvBlk[2] == 255 && rcvBlk[1] == numLastGoodBlk]  
 /errCnt=0;
 sendByte(ACK);	
TEXTEND
BEGIN InitialState 155
155 10
12 10 16 14
1
InitialState
BEGIN Transition 156
156 40
117 15 117 23
155 102
3 1 1 2
2 14 14 14 15 
0 14 15 14 16 
3 14 16 14 17 
BEGIN Transition 149
149 40
123 40 123 48
102 134
1 3 1 2
2 18 17 18 16 
0 18 16 18 14 
1 18 14 188 14 
0 188 14 188 21 
3 188 21 188 22 
BEGIN Transition 128
128 40
117 53 117 61
102 127
3 3 1 1
2 10 30 10 31 
1 10 31 12 31 
0 12 31 12 95 
3 12 95 12 96 
BEGIN Note 159
159 50
16 32 40 40
1
1 0 8421631 65535
49
TEXTBEGIN
 onEvent
 [rcvBlk[0] == SOH]/
 getRestBlk( );

TEXTEND
BEGIN Note 151
151 50
134 26 169 45
1
1 0 8421631 65535
172
TEXTBEGIN
 onEvent
 [rcvBlk[1] + rcvBlk[2] == 255 &&
 rcvBlk[1] == numLastGoodBlk + 1 &&
 Sum != rcvblk[131]
 /numLastGoodBlk++;
 writeChunk();
 errCnt=0;
 sendByte(ACK);
			
TEXTEND
BEGIN Transition 165
165 40
117 31 117 39
102 103
3 2 4 3
2 14 30 14 31 
1 14 31 24 31 
0 24 31 24 42 
3 24 42 25 42 
BEGIN Transition 131
131 40
131 103 131 111
127 106
2 3 1 1
2 26 108 27 108 
0 27 108 27 96 
1 27 96 145 96 
0 145 96 145 113 
3 145 113 145 114 
BEGIN Transition 163
163 40
146 53 146 61
103 103
2 1 1 2
2 46 42 47 42 
1 47 42 75 42 
0 75 42 75 23 
1 75 23 40 23 
0 40 23 40 37 
1 40 37 35 37 
3 35 37 35 38 
BEGIN Transition 161
161 40
146 61 146 69
103 102
2 3 2 1
2 46 50 47 50 
1 47 50 165 50 
0 165 50 165 20 
1 165 20 24 20 
3 24 20 23 20 
BEGIN Transition 162
162 40
146 57 146 65
103 103
2 2 1 2
2 46 46 47 46 
1 47 46 118 46 
0 118 46 118 37 
1 118 37 35 37 
3 35 37 35 38 
BEGIN Transition 167
167 40
30 51 30 59
103 127
3 3 1 1
2 30 55 30 56 
1 30 56 12 56 
0 12 56 12 95 
3 12 95 12 96 
BEGIN Transition 138
138 40
293 39 293 47
134 106
3 1 3 1
2 193 38 193 39 
0 193 39 193 133 
1 193 133 145 133 
0 145 133 145 119 
3 145 119 145 118 
BEGIN Transition 150
150 40
128 57 128 65
103 106
3 2 1 1
2 35 55 35 56 
0 35 56 35 77 
1 35 77 145 77 
0 145 77 145 113 
3 145 113 145 114 
BEGIN Note 169
169 50
15 57 33 70
1
0 0 65535 65535
32
TEXTBEGIN
onEvent(SER)
[rcvBlk[0] == CAN]
TEXTEND
BEGIN Transition 171
171 40
40 51 40 59
103 134
3 1 3 2
2 40 55 40 56 
1 40 56 188 56 
0 188 56 188 39 
3 188 39 188 38 
BEGIN Note 172
172 50
148 58 171 71
1
0 0 65535 65535
33
TEXTBEGIN
 onEvent(SER)
 /sendByte(NAK);

TEXTEND
END DATA
Untitled
Context
Context.h

0
INCLUDE BEGIN

INCLUDE END
0
DECL BEGIN

DECL END
Untitled
0
DESC BEGIN

DESC END
0
INCLUDE BEGIN

INCLUDE END
0
DECL BEGIN

DECL END
Context

0
DECL BEGIN

DECL END
Context

0
DECL BEGIN

DECL END
