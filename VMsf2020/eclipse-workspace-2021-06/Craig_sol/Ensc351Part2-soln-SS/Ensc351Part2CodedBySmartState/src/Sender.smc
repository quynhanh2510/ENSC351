9999 4 1
9
BEGIN DATA
BEGIN GenericState 159
159 10
5 3 162 86
1
Sender_TopLevel
0 12582911 0
42
TEXTBEGIN
    ctx.prepStatBlk();
    ctx.errCnt=0; 
TEXTEND
0
TEXTBEGIN

TEXTEND
BEGIN GenericState 132
132 10
7 14 133 85
1
NON_CAN
0 65535 0
0
TEXTBEGIN

TEXTEND
0
TEXTBEGIN

TEXTEND
BEGIN GenericState 101
101 10
83 28 95 36
1
ACKNAK
0 12582911 0
0
TEXTBEGIN

TEXTEND
0
TEXTBEGIN

TEXTEND
BEGIN GenericState 103
103 10
56 48 77 59
1
EOT1
0 12582911 0
21
TEXTBEGIN
/*ctx.sendByte(EOT)*/
TEXTEND
0
TEXTBEGIN

TEXTEND
BEGIN FinalState 109
109 10
104 89 108 93
1
FinalState
BEGIN Mesg 112
112 20
79 16 116 29
1
1 1 16777215 65280
107
SER
(c==ACK) && ctx.bytesRd
39
TEXTBEGIN
ctx.sendBlkPrepNext(); 
ctx.errCnt=0; 
TEXTEND
BEGIN Mesg 113
113 20
84 53 109 67
1
1 1 16777215 65280
110
SER
c==NAK
18
TEXTBEGIN
ctx.sendByte(EOT);
TEXTEND
BEGIN Mesg 115
115 20
69 60 88 72
1
1 1 16777215 65280
114
SER
c==ACK
18
TEXTBEGIN
ctx.prepStatBlk();
TEXTEND
BEGIN Mesg 117
117 20
77 40 116 55
1
1 1 16777215 65280
116
SER
(c==ACK) && !ctx.bytesRd
61
TEXTBEGIN
ctx.sendByte(EOT);ctx.errCnt=0; 
ctx.closeTransferredFile();
TEXTEND
BEGIN GenericState 118
118 10
45 28 55 37
1
START
0 12582911 0
0
TEXTBEGIN

TEXTEND
0
TEXTBEGIN

TEXTEND
BEGIN GenericState 123
123 10
101 51 112 59
1
EOTEOT
0 12582911 0
0
TEXTBEGIN

TEXTEND
0
TEXTBEGIN

TEXTEND
BEGIN Mesg 125
125 20
48 36 73 45
1
1 1 16777215 65280
124
SER
c == 'C' && !ctx.bytesRd
18
TEXTBEGIN
ctx.sendByte(EOT);
TEXTEND
BEGIN Mesg 127
127 20
98 31 128 42
1
1 1 16777215 65280
126
SER
c==NAK && (ctx.errCnt < errB)
31
TEXTBEGIN
ctx.resendBlk();
ctx.errCnt++;
TEXTEND
BEGIN InitialState 130
130 10
29 61 33 65
1
InitialState
BEGIN Mesg 134
134 20
2 88 81 98
1
1 1 16777215 65280
133
SER
c!=NAK
106
TEXTBEGIN
COUT << "Sender received totally unexpected char #" << c << ": " << (char) c << endl;
exit(EXIT_FAILURE);
TEXTEND
BEGIN GenericState 135
135 10
134 39 142 47
1
CAN
0 65535 0
0
TEXTBEGIN

TEXTEND
0
TEXTBEGIN

TEXTEND
BEGIN Mesg 137
137 20
136 32 155 44
1
1 1 16777215 65280
136
SER
c == CAN
0
TEXTBEGIN

TEXTEND
BEGIN Mesg 139
139 20
136 49 162 65
1
1 1 16777215 65280
138
SER
c == CAN
64
TEXTBEGIN
ctx.result=
     "RcvCancelled";
ctx.closeTransferredFile();

TEXTEND
BEGIN Mesg 141
141 20
41 56 65 68
1
1 1 16777215 65280
140
SER
c == ACK
44
TEXTBEGIN
cout << "1st EOT ACK'd";
ctx.prepStatBlk();
TEXTEND
BEGIN Note 142
142 50
24 3 62 16
1
0 0 4227327 128
169
TEXTBEGIN
Simplified Sender Statechart
November 2021
No dropped characters, no timeouts, 
     no cancellation via keyboard.
Copyright (c) 2021 Craig Scratchley
wcs AT sfu.ca
TEXTEND
BEGIN Mesg 144
144 20
108 87 156 101
1
1 1 16777215 65280
143
SER
c==NAK  /*&& (ctx.errCnt >= errB) */
69
TEXTBEGIN
ctx.cans();
ctx.closeTransferredFile();
ctx.result="ExcessiveNAKs";
TEXTEND
BEGIN Transition 145
145 40
32 33 32 41
118 101
2 3 4 1
2 55 34 56 34 
1 56 34 82 34 
3 82 34 83 34 
BEGIN Transition 124
124 40
12 29 12 37
118 103
3 3 4 3
2 48 37 48 38 
0 48 38 48 51 
1 48 51 55 51 
3 55 51 56 51 
BEGIN Mesg 146
146 20
55 27 81 38
1
1 1 16777215 65280
145
SER
c=='C' && ctx.bytesRd
24
TEXTBEGIN
ctx.sendBlkPrepNext();

TEXTEND
BEGIN Mesg 148
148 20
112 44 133 55
1
1 1 16777215 65280
147
SER
c==NAK &&          ctx.errCnt < errB
35
TEXTBEGIN
ctx.sendByte(EOT);
ctx.errCnt++;

TEXTEND
BEGIN Mesg 150
150 20
106 59 131 70
1
1 1 16777215 65280
149
SER
c=='C'
41
TEXTBEGIN
ctx.cans(); 
ctx.result="UnexpectedC";

TEXTEND
BEGIN InitialState 156
156 10
92 9 96 13
1
InitialState
BEGIN GenericState 160
160 10
14 61 24 69
1
StatC
0 12582911 0
0
TEXTBEGIN

TEXTEND
0
TEXTBEGIN

TEXTEND
BEGIN Mesg 163
163 20
17 50 51 61
1
1 1 16777215 65280
162
SER
c=='C' && ctx.transferringFileD != -1
26
TEXTBEGIN
ctx.sendBlkPrepNext();


TEXTEND
BEGIN GenericState 164
164 10
13 28 30 36
1
ACKNAKSTAT
0 12582911 0
0
TEXTBEGIN

TEXTEND
0
TEXTBEGIN

TEXTEND
BEGIN Mesg 166
166 20
11 70 45 82
1
1 1 16777215 65280
165
SER
c=='C' && ctx.fileName && ctx.transferringFileD == -1
36
TEXTBEGIN
ctx.cans();
ctx.result="OpenError";
TEXTEND
BEGIN Transition 167
167 40
73 40 73 48
164 118
2 2 4 2
2 30 32 31 32 
1 31 32 44 32 
3 44 32 45 32 
BEGIN Transition 162
162 40
62 74 62 82
160 164
1 1 3 3
2 17 61 17 60 
0 17 60 17 37 
3 17 37 17 36 
BEGIN Transition 149
149 40
98 62 98 70
123 109
3 2 1 1
2 106 59 106 60 
0 106 60 106 88 
3 106 88 106 89 
BEGIN Transition 114
114 40
84 30 84 38
123 160
3 3 2 3
2 104 59 104 60 
0 104 60 104 67 
1 104 67 25 67 
3 25 67 24 67 
BEGIN Transition 140
140 40
48 57 48 65
103 160
3 2 2 2
2 66 59 66 60 
0 66 60 66 65 
1 66 65 25 65 
3 25 65 24 65 
BEGIN Transition 116
116 40
75 74 75 82
101 103
3 2 1 3
2 89 36 89 37 
0 89 37 89 40 
1 89 40 71 40 
0 71 40 71 47 
3 71 47 71 48 
BEGIN Transition 107
107 40
36 36 36 44
101 101
1 3 4 3
2 92 28 92 27 
0 92 27 92 25 
1 92 25 79 25 
0 79 25 79 30 
1 79 30 82 30 
3 82 30 83 30 
BEGIN Transition 126
126 40
60 28 60 36
101 101
2 2 3 1
2 95 32 96 32 
1 96 32 98 32 
0 98 32 98 40 
1 98 40 92 40 
0 92 40 92 37 
3 92 37 92 36 
BEGIN Transition 110
110 40
58 57 58 65
103 123
2 2 4 3
2 77 53 78 53 
1 78 53 100 53 
3 100 53 101 53 
BEGIN Transition 147
147 40
107 55 107 63
123 123
2 3 2 2
2 112 57 113 57 
1 113 57 124 57 
0 124 57 124 55 
1 124 55 113 55 
3 113 55 112 55 
BEGIN Transition 169
169 40
66 38 66 46
164 164
1 3 1 2
2 25 28 25 27 
0 25 27 25 25 
1 25 25 21 25 
0 21 25 21 27 
3 21 27 21 28 
BEGIN Transition 131
131 40
19 7 19 15
130 160
1 1 1 3
2 31 61 31 60 
0 31 60 31 58 
1 31 58 21 58 
0 21 58 21 60 
3 21 60 21 61 
BEGIN Transition 165
165 40
62 82 62 90
160 109
4 2 1 1
2 14 65 13 65 
1 13 65 11 65 
0 11 65 11 81 
1 11 81 36 81 
0 36 81 36 70 
1 36 70 106 70 
0 106 70 106 88 
3 106 88 106 89 
BEGIN Transition 173
173 40
53 42 53 50
164 109
4 2 1 1
2 13 32 12 32 
1 12 32 9 32 
0 9 32 9 83 
1 9 83 106 83 
0 106 83 106 88 
3 106 88 106 89 
BEGIN Transition 133
133 40
90 73 90 81
159 109
4 1 3 1
2 5 64 4 64 
1 4 64 2 64 
0 2 64 2 97 
1 2 97 106 97 
0 106 97 106 94 
3 106 94 106 93 
BEGIN Transition 143
143 40
84 24 84 32
132 109
2 3 3 1
2 133 66 134 66 
1 134 66 142 66 
0 142 66 142 98 
1 142 98 106 98 
0 106 98 106 94 
3 106 94 106 93 
BEGIN Transition 138
138 40
115 33 115 41
135 109
3 3 3 1
2 136 47 136 48 
0 136 48 136 63 
1 136 63 160 63 
0 160 63 160 99 
1 160 99 106 99 
0 106 99 106 94 
3 106 94 106 93 
BEGIN Transition 136
136 40
80 26 80 34
132 135
2 1 1 1
2 133 32 134 32 
1 134 32 136 32 
0 136 32 136 38 
3 136 38 136 39 
BEGIN Transition 157
157 40
149 1 149 9
156 132
4 1 1 2
2 92 11 91 11 
1 91 11 70 11 
0 70 11 70 13 
3 70 13 70 14 
BEGIN Mesg 168
168 20
30 25 43 33
1
1 1 16777215 65280
167
SER
c==ACK && ctx.fileName
0
TEXTBEGIN

TEXTEND
BEGIN Mesg 170
170 20
19 16 38 26
1
1 1 16777215 65280
169
SER
c==NAK
31
TEXTBEGIN
ctx.resendBlk();
ctx.errCnt++;
TEXTEND
BEGIN Mesg 174
174 20
56 76 82 84
1
1 1 16777215 65280
173
SER
c==ACK && !ctx.fileName
18
TEXTBEGIN
ctx.result="Done";
TEXTEND
END DATA
Sender
SenderY
SenderY.h

46
INCLUDE BEGIN
#include "AtomicCOUT.h"
#include <stdlib.h>

INCLUDE END
20
DECL BEGIN
#define c wParam


DECL END
Copyright (c) 2021 W. Craig Scratchley
75
DESC BEGIN
 Simple YMODEM Sender

Copyright (C) 2021 Craig Scratchley
wcs AT sfu.ca
DESC END
0
INCLUDE BEGIN

INCLUDE END
0
DECL BEGIN

DECL END
Context

0
DECL BEGIN

DECL END
Context

0
DECL BEGIN

DECL END
